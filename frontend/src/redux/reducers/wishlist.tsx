// src/redux/reducers/wishlist.tsx
import { createSlice, type PayloadAction } from "@reduxjs/toolkit";

// --- Types ---
export interface WishlistItem {
  _id: string;
  name: string;
  category: string;
  image: string;
  price: number;
}

interface WishlistState {
  items: WishlistItem[];
}

// --- Initial State ---
const initialState: WishlistState = {
  items: [],
};

// --- Slice ---
export const wishlistSlice = createSlice({
  name: "wishlist",
  initialState,
  reducers: {
    // Add item to wishlist (avoid duplicates)
    addToWishlist: (state, action: PayloadAction<WishlistItem>) => {
      const exists = state.items.some((p) => p._id === action.payload._id);
      if (!exists) {
        state.items.push(action.payload);
      }
    },

    // Remove item from wishlist
    removeFromWishlist: (state, action: PayloadAction<string>) => {
      state.items = state.items.filter((p) => p._id !== action.payload);
    },

    // Clear wishlist
    clearWishlist: (state) => {
      state.items = [];
    },
  },
});

// --- Export actions (auto-generated by createSlice) ---
export const { addToWishlist, removeFromWishlist, clearWishlist } =
  wishlistSlice.actions;

// --- Export selectors ---
export const selectWishlistItems = (state: { wishlist: WishlistState }) =>
  state.wishlist.items;

export const selectWishlistCount = (state: { wishlist: WishlistState }) =>
  state.wishlist.items.length;

// --- Export reducer ---
export default wishlistSlice.reducer;
